const elements={toastContainer:document.getElementById("toastContainer"),reset:document.getElementById("reset"),twitchEmbed:document.getElementById("twitchEmbed"),mainCard:document.getElementById("mainCard"),sliderDiv:document.getElementById("sliderDiv"),guessRangeLabel:document.getElementById("guessRangeLabel"),guessRange:document.getElementById("guessRange"),guessLabel:document.getElementById("guessLabel"),guessNumber:document.getElementById("guessNumber"),multiChoiceDiv:document.getElementById("multiChoiceDiv"),multiChoiceLabel:document.getElementById("multiChoiceLabel"),multiChoice1:document.getElementById("multiChoice1"),multiChoice2:document.getElementById("multiChoice2"),multiChoice3:document.getElementById("multiChoice3"),multiChoice4:document.getElementById("multiChoice4"),multiChoice5:document.getElementById("multiChoice5"),gameNameDiv:document.getElementById("gameNameDiv"),gameInput:document.getElementById("gameInput"),gameList:document.getElementById("gameList"),higherlowerDiv:document.getElementById("higherlowerDiv"),higherlowerLabel:document.getElementById("higherlowerLabel"),higher:document.getElementById("higher"),lower:document.getElementById("lower"),resultsDiv:document.getElementById("resultsDiv"),nextRound:document.getElementById("nextRound"),playAgain:document.getElementById("playAgain"),gameEndText:document.getElementById("gameEndText"),scoreProgressBarLabel:document.getElementById("scoreProgressBarLabel"),progress:document.getElementById("progress"),progressBar:document.getElementById("progressBar"),correction:document.getElementById("correction"),scoreDiv:document.getElementById("scoreDiv"),round:document.getElementById("round"),score:document.getElementById("score"),timerDiv:document.getElementById("timerDiv"),timer:document.getElementById("timer"),infoTime:document.getElementById("infoTime"),streamCover:document.getElementById("streamCover"),clipCover:document.getElementById("clipCover"),resetHighScore:document.getElementById("resetHighScore"),viewersHS:document.getElementById("viewersHS"),followersHS:document.getElementById("followersHS"),resetMaxStreaks:document.getElementById("resetMaxStreaks"),viewersStreak:document.getElementById("viewersStreak"),followersStreak:document.getElementById("followersStreak"),gameStreak:document.getElementById("gameStreak"),emoteStreak:document.getElementById("emoteStreak"),viewersHigherlowerStreak:document.getElementById("viewersHigherlowerStreak"),followersHigherlowerStreak:document.getElementById("followersHigherlowerStreak"),resetSeenChannels:document.getElementById("resetSeenChannels"),seenChannels:document.getElementById("seenChannels"),resetSeenClips:document.getElementById("resetSeenClips"),seenClips:document.getElementById("seenClips"),gameSettingsModal:document.getElementById("gameSettingsModal"),streamsVideoType:document.getElementById("streamsVideoType"),clipsVideoType:document.getElementById("clipsVideoType"),clipCollectionDiv:document.getElementById("clipCollectionDiv"),clipCollection:document.getElementById("clipCollection"),videoTypeDesc:document.getElementById("videoTypeDesc"),controlsTypeDiv:document.getElementById("controlsTypeDiv"),sliderControls:document.getElementById("sliderControls"),choicesControls:document.getElementById("choicesControls"),higherlowerControls:document.getElementById("higherlowerControls"),controlsDesc:document.getElementById("controlsDesc"),timerValue:document.getElementById("timerValue"),chatSettingsDiv:document.getElementById("chatSettingsDiv"),channelName:document.getElementById("channelName"),disclaimer:document.getElementById("disclaimer"),getSettingsButton:document.getElementById("getSettingsButton"),leaderboard:document.getElementById("leaderboard"),leaderboardTabs:document.getElementById("leaderboardTabs"),totalTab:document.getElementById("totalTab"),roundTab:document.getElementById("roundTab"),leaderboardList:document.getElementById("leaderboardList"),leaderboardListRound:document.getElementById("leaderboardListRound"),chatHint:document.getElementById("chatHint")},requestOptions={method:"GET",redirect:"follow"};let channelBadges={subscriber:[],bits:[]},globalBadges={};const viewersSVG='<svg class="viewers-svg" width="24px" height="24px" version="1.1" viewBox="0 0 20 20" x="0px" y="0px">\n  <g>\n    <path\n      fill-rule="evenodd"\n      d="M5 7a5 5 0 116.192 4.857A2 2 0 0013 13h1a3 3 0 013 3v2h-2v-2a1 1 0 00-1-1h-1a3.99 3.99 0 01-3-1.354A3.99 3.99 0 017 15H6a1 1 0 00-1 1v2H3v-2a3 3 0 013-3h1a2 2 0 001.808-1.143A5.002 5.002 0 015 7zm5 3a3 3 0 110-6 3 3 0 010 6z"\n      clip-rule="evenodd"\n    ></path>\n  </g>\n</svg>',followSVG='<svg type="color-fill-current" width="24px" height="24px" version="1.1" viewBox="0 0 20 20" x="0px" y="0px" class="follow-svg">\n<g>\n  <path\n    fill-rule="evenodd"\n    d="M9.171 4.171A4 4 0 006.343 3H6a4 4 0 00-4 4v.343a4 4 0 001.172 2.829L10 17l6.828-6.828A4 4 0 0018 7.343V7a4 4 0 00-4-4h-.343a4 4 0 00-2.829 1.172L10 5l-.829-.829zm.829 10l5.414-5.414A2 2 0 0016 7.343V7a2 2 0 00-2-2h-.343a2 2 0 00-1.414.586L10 7.828 7.757 5.586A2 2 0 006.343 5H6a2 2 0 00-2 2v.343a2 2 0 00.586 1.414L10 14.172z"\n    clip-rule="evenodd"\n  ></path>\n</g>\n</svg>',spinner='<div class="spinner-border" role="status">\n<span class="visually-hidden">Loading...</span>\n</div>';let channelName,timer,gameSettingsModal,client,totalTab,roundTab,mainList=[],gameList=[],emoteList=[],guessList=[],seenChannels=[],seenClips=[],round=0,score=0,player=null,max=0,previousNumber=null,emoteChoices={a:1,b:2,c:3,d:4,e:5},gameSettings={game:"viewers",video:"streams",collection:"random",controls:"slider",chat:!1},viewersHS=0,followersHS=0,viewersStreak=0,followersStreak=0,gameStreak=0,emoteStreak=0,viewersHigherlowerStreak=0,followersHigherlowerStreak=0,roundActive=!1,chatters=[],usernameSent=!1;async function getMainList(){try{let e=await fetch("https://api.okayeg.com/guess",requestOptions),t=await e.json();mainList=t.guess.guess,max=Math.max(...mainList.map((e=>e.viewers||0)))+Math.floor(1e3*Math.random()),elements.guessNumber.max=max,elements.guessRange.value=0,elements.guessNumber.value="",elements.infoTime.innerHTML=`Channel list updated on ${new Date(t.guess.time)}`}catch(e){}}async function getMainListClips(){try{let e=await fetch(`https://api.okayeg.com/guess/clips/${gameSettings.collection}?time=${Date.now()}`,requestOptions),t=await e.json();mainList=t.random[0].clips,max=Math.max(...mainList.map((e=>e.viewers||0)))+Math.floor(1e3*Math.random()),elements.guessNumber.max=max,elements.guessRange.value=0,elements.guessNumber.value="",elements.infoTime.innerHTML=`Clip set generated on ${new Date(t.random[0].time)}`}catch(e){}}async function loadGameList(){let e=await fetch("/games.json",requestOptions);gameList=await e.json(),elements.gameList.innerHTML="",shuffleArray(gameList);for(let e=0;e<gameList.length;e++)elements.gameList.innerHTML+=`<option value="${gameList[e].name}"></option>`}async function loadEmoteList(){try{let e=await fetch(`https://api.okayeg.com/guess/emotes?time=${Date.now()}`,requestOptions),t=await e.json();emoteList=t.random}catch(e){}}function toggleControls(e=!1){if(e)return elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",void(elements.higherlowerDiv.style.display="none");switch(gameSettings.controls){case"slider":elements.sliderDiv.style.display="",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none";break;case"choices":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none";break;case"text":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="",elements.higherlowerDiv.style.display="none";break;case"higherlower":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="";break;default:break}}async function startGame(){guessList=[],chatters=[],score=0,elements.leaderboardList.innerHTML="",elements.leaderboardListRound.innerHTML="","clips"==gameSettings.video&&await getClipsGuessList(),"gamename"==gameSettings.game&&(gameSettings.controls="text",await loadGameList()),"emote"==gameSettings.game&&(gameSettings.controls="choices",await loadEmoteList()),player||(elements.twitchEmbed.innerHTML=""),"slider"==gameSettings.controls?(elements.round.innerHTML="Round <br />1/5",elements.score.innerHTML="Score <br />0",elements.scoreDiv.style.display=""):(elements.round.innerHTML="Streak <br />0",elements.score.innerHTML="",elements.scoreDiv.style.display=""),gameSettings.chat&&showLeaderboard(),elements.correction.innerHTML="",elements.gameEndText.innerHTML="",elements.mainCard.style.display="",round=0,previousNumber=null}async function getRandomStream(){let e=mainList[Math.floor(Math.random()*mainList.length)];if(seenChannels.some((t=>t===e.username)))return await getRandomStream();try{let t=await fetch(`https://helper.pepega.workers.dev/twitch/streams?user_id=${e.userid}`,requestOptions),s=await t.json();if(s.data[0]){if("followers"==gameSettings.game)try{let t=await fetch(`https://helper.pepega.workers.dev/twitch/channels/followers?broadcaster_id=${e.userid}`,requestOptions),s=await t.json();e.followers=s.total}catch(e){return showToast("Something went wrong while updating the follow count :(","danger",3e3),await getRandomStream()}return s.data[0].game_name||"gamename"!=gameSettings.game?(e.viewers=s.data[0].viewer_count,e.game_name=s.data[0].game_name,e):await getRandomStream()}return mainList=mainList.filter((t=>t.username!=e.username)),await getRandomStream()}catch(e){return showToast("Something went wrong while updating the view count :(","danger",3e3),await getRandomStream()}}async function getClipsGuessList(){await getMainListClips();let e=mainList.map((e=>e.id));try{let t=await fetch(`https://helper.pepega.workers.dev/twitch/clips?id=${e.join(",")}`,requestOptions);if(200!=t.status)return void showToast("Something went wrong while updating clip view counts :(","danger",3e3);let s=await t.json();for(let e=0;e<s.data.length;e++){let t=mainList.findIndex((t=>t.id==s.data[e].id));mainList[t].viewers=s.data[e].view_count}if(guessList=mainList.filter((e=>s.data.some((t=>e.id==t.id)))),guessList=mainList.filter((e=>!seenClips.includes(e.id))),max=Math.max(...guessList.map((e=>e.viewers||0)))+Math.floor(1e3*Math.random()),guessList.length<5)return showToast("Clips set contains deleted/already seen clips, getting new set...","info",2e3),await getClipsGuessList();"followers"==gameSettings.game&&await getClipsFollowerCount()}catch(e){showToast("Something went wrong while updating clip view counts :(","danger",3e3)}}async function getClipsFollowerCount(){let e=0;for(let t=0;t<5;t++)try{let s=await fetch(`https://helper.pepega.workers.dev/twitch/channels/followers?broadcaster_id=${guessList[t].userid}`,requestOptions);if(200!=s.status)return void showToast("Something went wrong while updating the follow counts :(","danger",3e3);let n=await s.json();guessList[t].followers=n.total,e++}catch(e){showToast("Something went wrong while updating the follow counts :(","danger",3e3)}if(e<5)return guessList=[],showToast("Clips set contains deleted/already seen clips, getting new set...","info",2e3),await getClipsGuessList();max=Math.max(...guessList.map((e=>e.followers||0)))+Math.floor(1e3*Math.random())}async function nextRound(){if(elements.nextRound.disabled=!0,elements.nextRound.innerHTML=spinner,5!=round||"clips"!=gameSettings.video||"choices"!=gameSettings.controls&&"text"!=gameSettings.controls&&"higherlower"!=gameSettings.controls||(await getClipsGuessList(),round=0,chatters.map((e=>e.lastGuess=0))),"streams"==gameSettings.video&&guessList.push(await getRandomStream()),round++,roundActive=!0,elements.guessNumber.max=max,elements.guessRange.value=0,elements.guessNumber.value="",elements.gameInput.value="",toggleControls(),"viewers"==gameSettings.game&&(elements.guessRangeLabel.innerHTML="How many viewers does this stream have?",elements.multiChoiceLabel.innerHTML="How many viewers does this stream have?","clips"==gameSettings.video&&(elements.guessRangeLabel.innerHTML="How many views does this clip have?",elements.multiChoiceLabel.innerHTML="How many views does this clip have?")),"followers"==gameSettings.game&&(elements.guessRangeLabel.innerHTML="How many followers does this stream have?",elements.multiChoiceLabel.innerHTML="How many followers does this stream have?",elements.guessLabel.innerHTML="Followers",elements.guessNumber.max=99999999,elements.guessNumber.value=""),"gamename"==gameSettings.game&&!gameList.some((e=>e.name===guessList[round-1].game_name))){elements.gameList.innerHTML="",gameList.push({name:guessList[round-1].game_name}),shuffleArray(gameList);for(let e=0;e<gameList.length;e++)elements.gameList.innerHTML+=`<option value="${gameList[e].name}"></option>`}if("emote"==gameSettings.game&&(elements.multiChoiceDiv.style.display="none",elements.multiChoiceLabel.innerHTML="Which emote belongs to this channel?",await generateEmoteChoices(guessList[round-1].userid)),"choices"==gameSettings.controls&&"emote"!=gameSettings.game&&generateChoices(guessList[round-1][gameSettings.game]),"higherlower"==gameSettings.controls&&(null==previousNumber?(previousNumber=Math.floor(Math.random()*("viewers"==gameSettings.game?1e3:5e4)),elements.higherlowerLabel.innerHTML=`Does this ${"streams"==gameSettings.video?"stream":"clip"} have a higher or lower ${"viewers"==gameSettings.game?"view count":"follow count"} than <span class="previous-number">${previousNumber.toLocaleString()}</span>? \n      <i class="material-icons notranslate" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="The first round has a random starting number, later rounds will be compared to the previous stream">info</i>`,enableTooltips()):elements.higherlowerLabel.innerHTML=`Does this ${"streams"==gameSettings.video?"stream":"clip"} have a higher or lower ${"viewers"==gameSettings.game?"view count":"follow count"} than the previous ${"streams"==gameSettings.video?"stream":"clip"} <span class="previous-number">(${previousNumber.toLocaleString()})</span>?`),"streams"==gameSettings.video?elements.streamCover.style.display="":elements.clipCover.style.display="","slider"==gameSettings.controls?(elements.round.innerHTML=`Round <br />${round}/5`,elements.score.innerHTML=`Score <br />${score.toLocaleString()}`):(elements.round.innerHTML=`Streak <br />${score.toLocaleString()}`,elements.score.innerHTML=""),"streams"==gameSettings.video){let e={width:"100%",height:"100%",allowfullscreen:!1,layout:"video",channel:guessList[round-1].username,parent:["guessr.tv"]};player?player.setChannel(guessList[round-1].username):player=new Twitch.Player("twitchEmbed",e),seenChannels.push(guessList[round-1].username)}"clips"==gameSettings.video&&(elements.twitchEmbed.innerHTML=`\n    <iframe \n    src="https://clips.twitch.tv/embed?clip=${guessList[round-1].id}&parent=guessr.tv&autoplay=true" \n    height="100%" \n    width="100%" \n    preload="auto" \n    >\n    </iframe>`,seenClips.push(guessList[round-1].id)),"slider"==gameSettings.controls&&(elements.leaderboardListRound.innerHTML="",totalTab.show()),elements.correction.innerHTML="",elements.nextRound.disabled=!1,elements.nextRound.innerHTML="Next round",elements.nextRound.style.display="none",elements.playAgain.disabled=!1,elements.playAgain.innerHTML="Play again",elements.playAgain.style.display="none",elements.resultsDiv.style.display="none",startTimer()}function generateChoices(e){let t=[[Math.floor(Math.random()*max*1.5),Math.floor(Math.random()*e*4),Math.floor(Math.random()*e),Math.floor(5*Math.random())],[Math.floor(Math.random()*max),Math.floor(Math.random()*max),Math.floor(Math.random()*max),0],[Math.floor(1e4*Math.random())+1e4,Math.floor(1e4*Math.random())+1e4,Math.floor(1e4*Math.random())+1e4,0],[Math.floor(2*Math.random())+2,Math.floor(2*Math.random())+2,Math.floor(2*Math.random())+2,Math.floor(2*Math.random())+2],[Math.floor(100*Math.random()),Math.floor(100*Math.random()),Math.floor(100*Math.random()),Math.floor(100*Math.random())],[Math.floor(10*Math.random())+10,Math.floor(10*Math.random())+100,Math.floor(10*Math.random())+1e3,Math.floor(10*Math.random())+1e4],[e+1,e+2,e+3,e+4],[4]],s=[];for(s.push(...t[Math.floor(Math.random()*t.length)]),s.push(e);hasDuplicates(s);)s=s.map((function(t){return s.indexOf(t)!==s.lastIndexOf(t)?Math.floor(Math.random()*(e+1)*10):t}));s.includes(e)||(s.pop(),s.push(e)),s.sort((function(){return.5-Math.random()}));for(let e=0;e<s.length;e++)elements[`multiChoice${e+1}`].dataset.answer=s[e],elements[`multiChoice${e+1}`].innerHTML=s[e].toLocaleString()}async function generateEmoteChoices(e){let t=[],s=[];for(let e=0;e<4;e++){const n=emoteList[Math.floor(Math.random()*emoteList.length)],a=[...n.bitstier,...n.follower,...n.subscriptions];if(t.includes(n._id)||a.length<1){e--;continue}let o=a[Math.floor(Math.random()*a.length)].id;await checkEmote(o)?(t.push(n._id),s.push({emote:o,id:n._id})):e--}try{let t=await fetch(`https://helper.pepega.workers.dev/twitch/chat/emotes?broadcaster_id=${e}`,requestOptions),n=await t.json();if(n?.data?.length>0){let t=n.data[Math.floor(Math.random()*n.data.length)].id;await checkEmote(t),s.push({emote:t,id:e}),guessList[round-1].emote=t}else showToast("Channel has no emotes :) added TriHard as a temporary emote till I fix this :)","info",3e3),s.push({emote:"120232",id:e}),guessList[round-1].emote="120232";shuffleArray(s);for(let e=0;e<s.length;e++)elements[`multiChoice${e+1}`].dataset.answer=s[e].id,elements[`multiChoice${e+1}`].dataset.emote=s[e].emote,elements[`multiChoice${e+1}`].innerHTML=`${gameSettings.chat?Object.keys(emoteChoices).find((t=>emoteChoices[t]===e+1)):""} <img src="https://static-cdn.jtvnw.net/emoticons/v2/${s[e].emote}/default/dark/3.0" alt="emote #${e+1}">`}catch(e){}elements.multiChoiceDiv.style.display=""}function hasDuplicates(e){return new Set(e).size!==e.length}async function checkEmote(e){try{const t=await fetch(`https://static-cdn.jtvnw.net/emoticons/v2/${e}/default/dark/3.0`);return(await t.blob()).type.startsWith("image/")}catch(e){return!1}}async function guess(e,t){let s;switch(roundActive=!1,e){case"slider":s=parseInt(elements.guessNumber.value,10);break;case 1:case 2:case 3:case 4:case 5:s=parseInt(elements[`multiChoice${e}`].dataset.answer,10);break;case"higher":case"lower":s=e;break;case"game":if(s=elements.gameInput.value.replace(/\s+/g,"").toLowerCase(),!s&&!t)return showToast("Invalid answer","warning",2e3),void(elements.gameInput.value="");if(!gameList.some((e=>e.name.replace(/\s+/g,"").toLowerCase()===s))&&!t)return showToast("Answer must be from the suggestions list","warning",2e3),void(elements.gameInput.value="");break;default:s=-1}if((isNaN(s)||null===s)&&"gamename"!=gameSettings.game&&"higherlower"!=gameSettings.controls)return void showToast("Invalid answer","warning",2e3);stopTimer();let{points:n,percent:a,diff:o,color:r}=calculateScore(s);if(score+=n,elements.streamCover.style.display="none",elements.clipCover.style.display="none",toggleControls(!0),elements.nextRound.style.display="",elements.resultsDiv.style.display="","slider"==gameSettings.controls?elements.score.innerHTML=`Score <br />${score.toLocaleString()}`:elements.round.innerHTML=`Streak <br />${score.toLocaleString()}`,("viewers"==gameSettings.game||"followers"==gameSettings.game)&&"slider"==gameSettings.controls){let e=s-guessList[round-1][gameSettings.game]>0?'<i class="material-icons notranslate">arrow_upward</i>':'<i class="material-icons notranslate">arrow_downward</i>';elements.scoreProgressBarLabel.innerHTML=`${n.toLocaleString()} ${1==n?"Point":"Points"}${0==n?" 💀":""}`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,"viewers"==gameSettings.game?elements.correction.innerHTML=`\n    The ${"streams"==gameSettings.video?"stream":"clip"} has ${viewersSVG}\n    <strong>${guessList[round-1][gameSettings.game].toLocaleString()}</strong>\n     ${1==guessList[round-1].viewers?""+("streams"==gameSettings.video?"viewer":"view"):""+("streams"==gameSettings.video?"viewers":"views")}<br>\n    ${5e3==n?"You nailed the view count perfectly ✌":""+(-1==s?"You did not submit an answer":`Your guess was off by ${e} <span class="${r}">${o.toLocaleString()}</span> ${1==o?"view":"views"}`)}`:elements.correction.innerHTML=`\n      The stream has ${followSVG} <strong>${guessList[round-1][gameSettings.game].toLocaleString()}</strong>\n       ${1==guessList[round-1].followers?"follower":"followers"}<br>\n      ${5e3==n?"You nailed the follower count perfectly ✌":""+(-1==s?"You did not submit an answer":`Your guess was off by ${e} <span class="${r}">${o.toLocaleString()}</span> ${1==o?"follower":"followers"}`)}`}if("viewers"==gameSettings.game&&"choices"==gameSettings.controls){let e=s-guessList[round-1].viewers>0?'<i class="material-icons notranslate">arrow_upward</i>':'<i class="material-icons notranslate">arrow_downward</i>';o=Math.abs(s-guessList[round-1].viewers),a=score/viewersStreak*100,elements.scoreProgressBarLabel.innerHTML=score>viewersStreak?`You beat your high score! Your new highscore is ${score.toLocaleString()}`:`${viewersStreak-score+1} more ${viewersStreak-score+1==1?"round":"rounds"} till you beat your highscore`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,elements.correction.innerHTML=`\n      The ${"streams"==gameSettings.video?"stream":"clip"} has ${viewersSVG}<strong>${guessList[round-1].viewers.toLocaleString()}</strong>\n       ${1==guessList[round-1].viewers?""+("streams"==gameSettings.video?"viewer":"view"):""+("streams"==gameSettings.video?"viewers":"views")}<br>\n      ${1==n?"You nailed the view count perfectly ✌":""+(-1==s?"You did not select an answer":`Your guess was off by ${e} <span class="${r}">${o.toLocaleString()}</span> ${1==o?"view":"views"}`)}`,0==n&&(elements.nextRound.style.display="none",elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,elements.playAgain.style.display="",elements.gameEndText.style.display="",score>viewersStreak?(elements.gameEndText.innerHTML+="<br>New High Score!",viewersStreak=score,localStorage.setItem("viewersStreak",viewersStreak)):elements.gameEndText.innerHTML+=`<br>High Score: ${viewersStreak.toLocaleString()}`)}if("followers"==gameSettings.game&&"choices"==gameSettings.controls){let e=s-guessList[round-1].followers>0?'<i class="material-icons notranslate">arrow_upward</i>':'<i class="material-icons notranslate">arrow_downward</i>';o=Math.abs(s-guessList[round-1].followers),a=score/followersStreak*100,elements.scoreProgressBarLabel.innerHTML=score>followersStreak?`You beat your high score! Your new highscore is ${score.toLocaleString()}`:`${followersStreak-score+1} more ${followersStreak-score+1==1?"round":"rounds"} till you beat your highscore`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,elements.correction.innerHTML=`The stream has ${followSVG}<strong>${guessList[round-1].followers.toLocaleString()}</strong> ${1==guessList[round-1].followers?"follower":"followers"}<br>\n      ${1==n?"You nailed the follower count perfectly ✌":""+(-1==s?"You did not select an answer":`Your guess was off by ${e} <span class="${r}">${o.toLocaleString()}</span> ${1==o?"follower":"followers"}`)}`,0==n&&(elements.nextRound.style.display="none",elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,elements.playAgain.style.display="",elements.gameEndText.style.display="",score>followersStreak?(elements.gameEndText.innerHTML+="<br>New High Score!",followersStreak=score,localStorage.setItem("followersStreak",followersStreak)):elements.gameEndText.innerHTML+=`<br>High Score: ${followersStreak.toLocaleString()}`)}if("gamename"==gameSettings.game&&(a=score/gameStreak*100,elements.scoreProgressBarLabel.innerHTML=score>gameStreak?`You beat your high score! Your new highscore is ${score}`:`${gameStreak-score+1} more ${gameStreak-score+1==1?"round":"rounds"} till you beat your highscore`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,elements.correction.innerHTML=`The streamer was playing <strong>${guessList[round-1].game_name}</strong><br>\n    ${1==n?"You guessed the game correctly ✌":""+(-1==s?"You did not select an answer":`Your guess was <span class="${r}">${elements.gameInput.value}</span>`)}`,0==n&&(elements.nextRound.style.display="none",elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,elements.playAgain.style.display="",elements.gameEndText.style.display="",score>gameStreak?(elements.gameEndText.innerHTML+="<br>New High Score!",gameStreak=score,localStorage.setItem("gameStreak",gameStreak)):elements.gameEndText.innerHTML+=`<br>High Score: ${gameStreak.toLocaleString()}`)),"emote"==gameSettings.game){let t=elements[`multiChoice${e}`].dataset.emote;a=score/emoteStreak*100,elements.scoreProgressBarLabel.innerHTML=score>emoteStreak?`You beat your high score! Your new highscore is ${score}`:`${emoteStreak-score+1} more ${emoteStreak-score+1==1?"round":"rounds"} till you beat your highscore`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,elements.correction.innerHTML=`The streamer's emote was <img style="height: 56px;" \n    src="https://static-cdn.jtvnw.net/emoticons/v2/${guessList[round-1].emote}/default/dark/3.0" alt="emote"><br>\n    ${1==n?"You guessed the emote correctly ✌":""+(-1==s?"You did not select an asnwer":`Your guess was <img style="height: 56px;" \n              src="https://static-cdn.jtvnw.net/emoticons/v2/${t}/default/dark/3.0" alt="emote">`)}`,0==n&&(elements.nextRound.style.display="none",elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,elements.playAgain.style.display="",elements.gameEndText.style.display="",score>emoteStreak?(elements.gameEndText.innerHTML+="<br>New High Score!",emoteStreak=score,localStorage.setItem("emoteStreak",emoteStreak)):elements.gameEndText.innerHTML+=`<br>High Score: ${emoteStreak.toLocaleString()}`)}if(("viewers"==gameSettings.game||"followers"==gameSettings.game)&&"higherlower"==gameSettings.controls){let t="viewers"==gameSettings.game?viewersHigherlowerStreak:followersHigherlowerStreak;a=score/t*100,elements.scoreProgressBarLabel.innerHTML=score>t?`You beat your high score! Your new highscore is ${score}`:`${t-score+1} more ${t-score+1==1?"round":"rounds"} till you beat your highscore`,elements.progress.ariaValueNow=a,elements.progressBar.style.width=`${a}%`,elements.correction.innerHTML=`The ${"streams"==gameSettings.video?"channel":"clips"} has ${"viewers"==gameSettings.game?viewersSVG:followSVG}<strong>${guessList[round-1][gameSettings.game].toLocaleString()}</strong> ${"viewers"==gameSettings.game?""+(1==guessList[round-1][gameSettings.game]?"viewer":"viewers"):""+(1==guessList[round-1][gameSettings.game]?"follower":"followers")}${guessList[round-1][gameSettings.game]==previousNumber?" (same as previous channel!)":""}<br>\n    ${1==n?`The ${"streams"==gameSettings.video?"stream":"clip"} has a ${e} ${"viewers"==gameSettings.game?"view count":"follow count"}!`:""+(-1==s?"You did not select an answer":`The previous ${"streams"==gameSettings.video?"channel":"clips"} had ${previousNumber.toLocaleString()} ${gameSettings.game}`)}`,previousNumber=guessList[round-1][gameSettings.game],0==n&&(elements.nextRound.style.display="none",elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,elements.playAgain.style.display="",elements.gameEndText.style.display="",score>t?(elements.gameEndText.innerHTML+="<br>New High Score!","viewers"==gameSettings.game?viewersHigherlowerStreak=score:followersHigherlowerStreak=score,localStorage.setItem("viewers"==gameSettings.game?"viewersHigherlowerStreak":"followersHigherlowerStreak",score)):elements.gameEndText.innerHTML+=`<br>High Score: ${score.toLocaleString()}`)}if(gameSettings.chat){let e=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),t=chatters.map((e=>e.username)).indexOf(e);-1===t?chatters.push({username:e,score:n,round:n,lastGuess:round,color:"#FFFFFF"}):(chatters[t].score+=n,chatters[t].round=n,chatters[t].lastGuess=round),updateLeaderboard()}(5!=round||"choices"!=gameSettings.controls&&"text"!=gameSettings.controls&&"higherlower"!=gameSettings.controls)&&(5==round&&"viewers"==gameSettings.game&&(elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,score>viewersHS?(elements.gameEndText.innerHTML+="<br>New High Score!",viewersHS=score,localStorage.setItem("viewersHS",viewersHS)):elements.gameEndText.innerHTML+=`<br>High Score: ${viewersHS.toLocaleString()}`,elements.nextRound.style.display="none",elements.playAgain.style.display="",elements.gameEndText.style.display=""),5==round&&"followers"==gameSettings.game&&(elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,score>followersHS?(elements.gameEndText.innerHTML+="<br>New High Score!",followersHS=score,localStorage.setItem("followersHS",followersHS)):elements.gameEndText.innerHTML+=`<br>High Score: ${followersHS.toLocaleString()}`,elements.nextRound.style.display="none",elements.playAgain.style.display="",elements.gameEndText.style.display=""))}function calculateScore(e){let t,s=0,n=0,a=0;if("emote"==gameSettings.game&&(s=e==guessList[round-1].userid?1:0),"viewers"==gameSettings.game&&"slider"==gameSettings.controls){let t=Math.max(...guessList.slice(0,5).map((e=>e.viewers||0))),o=guessList[round-1].viewers/t*2800+200;a=Math.abs(e-guessList[round-1].viewers),s=Math.round(5e3*Math.exp(-a/o)),n=Math.round(s/5e3*100)}if("followers"==gameSettings.game&&"slider"==gameSettings.controls){let t=Math.max(...guessList.slice(0,5).map((e=>e.followers||0))),o=guessList[round-1].followers/t*29e4+1e4;a=Math.abs(e-guessList[round-1].followers),s=Math.round(5e3*Math.exp(-a/o)),n=Math.round(s/5e3*100)}return"choices"!=gameSettings.controls||"viewers"!=gameSettings.game&&"followers"!=gameSettings.game||(s=e==guessList[round-1][gameSettings.game]?1:0),"higherlower"!=gameSettings.controls||"viewers"!=gameSettings.game&&"followers"!=gameSettings.game||(s="higher"==e&&guessList[round-1][gameSettings.game]>=previousNumber||"lower"==e&&guessList[round-1][gameSettings.game]<=previousNumber?1:0),"gamename"==gameSettings.game&&(s=e==guessList[round-1].game_name.replace(/\s+/g,"").toLowerCase()?1:0),-1==e&&(s=0,n=0),s>=4500?t="text-success":s<4500&&s>=2e3?t="text-warning":s<2e3&&(t="text-danger"),{points:s,percent:n,diff:a,color:t}}function reset(){stopTimer(),guessList=[],elements.round.innerHTML="Round <br />1/5",elements.score.innerHTML="Score <br />0",elements.scoreDiv.style.display="none",elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none",elements.resultsDiv.style.display="none",elements.mainCard.style.display="none",elements.streamCover.style.display="none",elements.clipCover.style.display="none",elements.leaderboard.style.display="none",elements.getSettingsButton.innerHTML="Start",elements.getSettingsButton.disabled=!1,elements.guessLabel.innerHTML="View count",elements.leaderboardList.innerHTML="",elements.gameEndText.innerHTML="",channelBadges={subscriber:[],bits:[]},globalBadges={},round=0,score=0,player=null,roundActive=!1,client&&(client.disconnect(),client=null),elements.twitchEmbed.innerHTML='<div class="card mt-5" id="welcomeCard">\n  <div class="card-header"><img src="/pics/guessr.png" alt="logo" style="height: 24px; width: 24px" class="d-inline-block align-top" /> Guessr.tv</div>\n  <div class="card-body">\n    <div class="container-fluid">\n      <div class="row mb-3">\n        <div class="card game-card cursor-pointer" onclick="showSettings(\'viewers\')">\n          <div class="card-body">\n            <h2>\n              Viewers\n              <svg class="viewers-svg" width="48px" height="48px" version="1.1" viewBox="0 0 20 20" x="0px" y="0px">\n                <g>\n                  <path\n                    fill-rule="evenodd"\n                    d="M5 7a5 5 0 116.192 4.857A2 2 0 0013 13h1a3 3 0 013 3v2h-2v-2a1 1 0 00-1-1h-1a3.99 3.99 0 01-3-1.354A3.99 3.99 0 017 15H6a1 1 0 00-1 1v2H3v-2a3 3 0 013-3h1a2 2 0 001.808-1.143A5.002 5.002 0 015 7zm5 3a3 3 0 110-6 3 3 0 010 6z"\n                    clip-rule="evenodd"\n                  ></path>\n                </g>\n              </svg>\n            </h2>\n            <div class="hidden">\n              A random Twitch streamer will be shown and you will have to guess how many viewers they have. The closer you are to the target view count the more points you\'ll\n              earn.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="row mb-3">\n        <div class="card game-card cursor-pointer" onclick="showSettings(\'followers\')">\n          <div class="card-body">\n            <h2>\n              Followers\n              <svg type="color-fill-current" width="48px" height="48px" version="1.1" viewBox="0 0 20 20" x="0px" y="0px" class="follow-svg">\n                <g>\n                  <path\n                    fill-rule="evenodd"\n                    d="M9.171 4.171A4 4 0 006.343 3H6a4 4 0 00-4 4v.343a4 4 0 001.172 2.829L10 17l6.828-6.828A4 4 0 0018 7.343V7a4 4 0 00-4-4h-.343a4 4 0 00-2.829 1.172L10 5l-.829-.829zm.829 10l5.414-5.414A2 2 0 0016 7.343V7a2 2 0 00-2-2h-.343a2 2 0 00-1.414.586L10 7.828 7.757 5.586A2 2 0 006.343 5H6a2 2 0 00-2 2v.343a2 2 0 00.586 1.414L10 14.172z"\n                    clip-rule="evenodd"\n                  ></path>\n                </g>\n              </svg>\n            </h2>\n            <div class="hidden">Same as the above but you\'ll be guessing how many followers the random streamers have.</div>\n          </div>\n        </div>\n      </div>\n      <div class="row mb-3">\n        <div class="card game-card cursor-pointer" onclick="showSettings(\'gamename\')">\n          <div class="card-body">\n            <h2>\n              Game\n              <i class="material-icons notranslate mp-icon">sports_esports</i>\n            </h2>\n            <div class="hidden">You will be shown a random Twitch stream and you will have to guess what game they are playing.</div>\n          </div>\n        </div>\n      </div>\n      <div class="row">\n        <div class="card game-card cursor-pointer" onclick="showSettings(\'emote\')">\n          <div class="card-body">\n            <h2>\n              Emote\n              <i class="material-icons notranslate mp-icon">emoji_emotions</i>\n            </h2>\n            <div class="hidden">You will be shown a random Twitch stream and you will have to guess which emote belongs to them.</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>'}function showToast(e,t,s){let n=Date.now(),a=`<div id="${n}" class="toast align-items-center text-bg-${t} border-0" role="alert" data-bs-autohide="false" aria-live="assertive" aria-atomic="true">\n      <div class="d-flex">\n      <div class="toast-body" style="font-size:1.2em">${e}</div>\n      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>\n      </div>\n      </div>`;elements.toastContainer.innerHTML+=a;let o=[].slice.call(document.querySelectorAll(".toast")).map((function(e){return new bootstrap.Toast(e,{animation:!1})}));o[o.length-1].show(),setTimeout((function(){o[o.length-1].hide(),document.getElementById(n).remove()}),s)}async function showSettings(e){switch(gameSettings.game=e,elements.controlsTypeDiv.style.display="viewers"==e||"followers"==e?"":"none","higherlower"==gameSettings.controls&&(elements.controlsDesc.innerHTML=`You will have to guess if the current stream has a higher or lower ${"followers"==e?"follow":"view"} count than the previous one  - Keep playing till you get a wrong answer`),"slider"==gameSettings.controls&&(elements.controlsDesc.innerHTML=`You will have to guess the exact ${"followers"==gameSettings.game?"follow":"view"} count - 5 rounds - 5,000 points per round based on how close you are to the correct number`),elements.disclaimer.style.display="",e){case"viewers":elements.disclaimer.innerHTML="The answer will not always be the same as the view count seen on the stream because the API does not update as fast";break;case"gamename":elements.disclaimer.innerHTML="Some streamers could forget to update their category or set it incorrectly, expect to be Jebaited :)";break;case"emote":elements.disclaimer.innerHTML='Some channels might not have any emotes, in that case <img src="https://static-cdn.jtvnw.net/emoticons/v2/120232/default/dark/3.0" alt="TriHard" title="TriHard" width=28> will be added as a placeholder ';break;default:elements.disclaimer.style.display="none"}gameSettingsModal.show()}async function getSettings(){if(elements.getSettingsButton.innerHTML=spinner,elements.getSettingsButton.disabled=!0,gameSettings.video=document.querySelector('input[name="videoTypeSelect"]:checked').value||"streams",gameSettings.collection=elements.clipCollection.value||"random",gameSettings.controls=document.querySelector('input[name="controlsSelect"]:checked').value||"slider","gamename"==gameSettings.game&&"hottub"==gameSettings.collection&&"clips"==gameSettings.video)return showToast("Hmmm today I'll pick game guessr mode then pick a clip collection that has 1 category only 🤙","info",5e3),void reset();if("emote"==gameSettings.game&&"forsen"==gameSettings.collection&&"clips"==gameSettings.video)return showToast("Hmmm today I'll pick emote guessr mode then pick a clip collection that has 1 channel only 🤙","info",5e3),void reset();if("followers"==gameSettings.game&&"forsen"==gameSettings.collection&&"clips"==gameSettings.video)return showToast("Hmmm today I'll pick followers mode then pick a clip collection that has 1 channel only 🤙","info",5e3),void reset();switch(gameSettings.game){case"gamename":elements.chatHint.innerHTML='Type <kbd class="notranslate">!guess [game name]</kbd> in chat to guess';break;case"emote":elements.chatHint.innerHTML="Type an emote's letter (a/b/c/d/e) in chat to guess";break;default:elements.chatHint.innerHTML="Type a number in chat to guess";break}"higherlower"!=gameSettings.controls||"viewers"!=gameSettings.game&&"followers"!=gameSettings.game||(elements.chatHint.innerHTML='Type <kbd class="notranslate">higher</kbd> or <kbd class="notranslate">lower</kbd> in chat to guess'),channelName=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),channelName?(localStorage.setItem("channelName",channelName),gameSettings.chat=!0,connectChat(channelName),channelBadges=await getChannelBadges(channelName),globalBadges=await getGlobalBadges()):(localStorage.setItem("channelName",""),gameSettings.chat=!1),"streams"==gameSettings.video&&await getMainList(),await startGame(),nextRound(),gameSettingsModal.hide()}async function connectChat(e){let t={connection:{secure:!0,reconnect:!0},channels:[e]};client=new tmi.client(t),client.on("message",(async(e,t,s,n)=>{if(!gameSettings.chat||!roundActive)return;let a={points:"",percent:"",diff:"",color:""},o=s.split(" ").filter(Boolean);if("higherlower"!==gameSettings.controls&&("viewers"==gameSettings.game||"followers"==gameSettings.game)){let e=parseAnswer(o[0]);if(null==e||""===e||e<0)return;a=calculateScore(e)}if("higherlower"==gameSettings.controls&&("viewers"==gameSettings.game||"followers"==gameSettings.game)){if("higher"!==o[0]?.toLowerCase()&&"lower"!==o[0]?.toLowerCase())return;a=calculateScore(o[0].toLowerCase())}if("gamename"==gameSettings.game){if("!guess"!==o[0]?.toLowerCase())return;a=calculateScore(o.slice(1).join("").replace(/\s+/g,"").toLowerCase())}if("emote"==gameSettings.game){if(!emoteChoices.hasOwnProperty(o[0]?.toLowerCase()))return;a=calculateScore(parseInt(elements[`multiChoice${emoteChoices[o[0].toLowerCase()]}`].dataset.answer,10))}let r=chatters.map((e=>e.username)).indexOf(t.username);"choices"!=gameSettings.controls&&"higherlower"!=gameSettings.controls&&"gamename"!=gameSettings.game||0!=a.points||(a.points="😵"),-1===r?(chatters.push({username:t.username,score:a.points,round:a.points,lastGuess:round,color:t.color,badges:t.badges}),elements.leaderboardList.insertAdjacentHTML(""+(1==round?"afterbegin":"beforeend"),`<li class="list-group-item"><span>🔵</span><span style="color:${t.color||"#FFFFFF"};">${addBadges(t.badges)} ${t.username}:</span> 🙈</li>`),"slider"==gameSettings.controls&&elements.leaderboardListRound.insertAdjacentHTML(""+(1==round?"afterbegin":"beforeend"),`<li class="list-group-item"><span style="color:${t.color||"#FFFFFF"};">${addBadges(t.badges)} ${t.username}:</span> 🙈</li>`)):chatters[r].lastGuess<round&&"😵"!=chatters[r].score&&("choices"==gameSettings.controls||"higherlower"==gameSettings.controls||"gamename"==gameSettings.game?(chatters[r].score++,"😵"==a.points&&(chatters[r].score="😵")):(chatters[r].score+=a.points,chatters[r].round=a.points),chatters[r].lastGuess=round,document.getElementById(`${t.username}_dot`).style.visibility="visible")})),client.on("connected",((t,s)=>{!usernameSent&&e&&sendUsername(),showToast(`Connected to ${e}`,"success",2e3)})),client.on("disconnected",(e=>{showToast(`Disconnected: ${e}`,"danger",2e3)})),client.on("notice",((e,t,s)=>{showToast(`Disconnected: ${s}`,"danger",2e3)})),client.connect().catch(console.error)}function parseAnswer(e){try{return(e=e.toLowerCase().replace(/,/g,"")).endsWith("m")?isInt(e=1e6*parseFloat(e.slice(0,-1)))?Math.round(e):null:e.endsWith("k")?isInt(e=1e3*parseFloat(e.slice(0,-1)))?Math.round(e):null:isInt(parseInt(e,10))?parseInt(e,10):null}catch(e){return null}}function isInt(e){if(isNaN(e))return!1;let t=parseFloat(e);return(0|t)===t}function startTimer(){let e=60*parseFloat(elements.timerValue.value);e&&(timer=new easytimer.Timer,timer.addEventListener("secondTenthsUpdated",(function(e){document.querySelector("#timer").innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"])})),timer.addEventListener("targetAchieved",(function(e){guess(null,!0),elements.timerDiv.style.display="none",timer.reset(),timer.stop()})),document.querySelector("#timer").innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"]),elements.timerDiv.style.display="",timer.start({countdown:!0,precision:"secondTenths",startValues:{seconds:e}}))}function stopTimer(){timer&&timer.isRunning()&&(timer.reset(),timer.stop(),elements.timerDiv.style.display="none")}function showLeaderboard(){elements.leaderboard.style.display="","slider"==gameSettings.controls?elements.leaderboardTabs.style.display="":(elements.leaderboardTabs.style.display="none",totalTab.show())}function updateLeaderboard(){let e=elements.channelName.value.replace(/\s+/g,"").toLowerCase();chatters.sort(((e,t)=>(parseInt(t.score,10)||0)-(parseInt(e.score,10)||0)));let t="";for(let s=0;s<chatters.length;s++)chatters[s].lastGuess<round&&("choices"==gameSettings.controls||"higherlower"==gameSettings.controls||"gamename"==gameSettings.game)&&(chatters[s].score="😵"),t+=`<li class="list-group-item ${e==chatters[s].username?"bg-primary":""}">\n    <span id="${chatters[s].username}_dot" style="visibility: hidden">🔵</span>\n    <span style="color:${chatters[s].color||"#FFFFFF"};">${addBadges(chatters[s].badges)} ${chatters[s].username}:</span> \n    ${chatters[s].score.toLocaleString()}</li>`;if(elements.leaderboardList.innerHTML=t,"slider"==gameSettings.controls){chatters.sort(((e,t)=>(parseInt(t.round,10)||0)-(parseInt(e.round,10)||0)));let t="";for(let s=0;s<chatters.length;s++)chatters[s].lastGuess<round||(t+=`<li class="list-group-item ${e==chatters[s].username?"bg-primary":""}">\n      <span style="color:${chatters[s].color||"#FFFFFF"};">${addBadges(chatters[s].badges)} ${chatters[s].username}:</span> \n      ${chatters[s].round.toLocaleString()}</li>`);elements.leaderboardListRound.innerHTML=t}}function addBadges(e){try{let t="";for(const s in e)if("subscriber"==s&&e.subscriber&&channelBadges.subscriber.length>0){t+=`<img src="${channelBadges.subscriber.find((t=>t.id===e.subscriber)).url}" style="height:1.3em;" title="Subscriber"/>`}else if("bits"==s&&channelBadges.bits.length>0){t+=`<img src="${channelBadges.bits.find((t=>t.id===e.bits)).url}" style="height:1.3em;" title="Bits"/>`}else if(Object.keys(globalBadges).length>0){t+=`<img src="${globalBadges[s].find((t=>t.id===e[s])).image_url_4x}" style="height:1.3em;" title="${s}"/>`}return t}catch(e){return""}}async function getChannelBadges(e){return new Promise((async function(t,s){try{let s=await fetch(`https://api.okayeg.com/emotes?channel=${e}`,requestOptions),n=await s.json();n.data.badges&&0!=n.data.badges.length||t({subscriber:[],bits:[]});let a={subscriber:[],bits:[]};if(n.data.badges.length>0){let e=[],s=[];n.data.badges[0]&&("subscriber"==n.data.badges[0].set_id&&(e=n.data.badges[0].versions),"bits"==n.data.badges[0].set_id&&(s=n.data.badges[0].versions)),n.data.badges[1]&&("subscriber"==n.data.badges[1].set_id&&(e=n.data.badges[1].versions),"bits"==n.data.badges[1].set_id&&(s=n.data.badges[1].versions));for(let t=0,s=e.length;t<s;t++)a.subscriber.push({id:e[t].id,url:e[t].image_url_4x});for(let e=0,t=s.length;e<t;e++)a.bits.push({id:s[e].id,url:s[e].image_url_4x});t(a)}}catch(e){t({subscriber:[],bits:[]})}}))}async function getGlobalBadges(){return new Promise((async function(e,t){try{let t=await fetch("https://api.okayeg.com/badges/global",requestOptions),s=await t.json();if(s.data&&0!=s.data.length||e({}),s.data.length>0){let t={};for(let e=0,n=s.data.length;e<n;e++)t[s.data[e].set_id]=s.data[e].versions;e(t)}}catch(t){e({})}}))}async function sendUsername(){let e={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({site:"guessr.tv",channel:channelName,platform:"twitch"}),redirect:"follow"};try{await fetch("https://helper.pepega.workers.dev/log/username",e);usernameSent=!0}catch(e){}}function shuffleArray(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}}function enableTooltips(){[...document.querySelectorAll('[data-bs-toggle="tooltip"]')].map((e=>new bootstrap.Tooltip(e)))}window.onload=async function(){seenChannels=JSON.parse(localStorage.getItem("seenChannels"))||[],elements.seenChannels.innerHTML=seenChannels.length,seenClips=JSON.parse(localStorage.getItem("seenClips"))||[],elements.seenClips.innerHTML=seenClips.length,viewersHS=parseInt(localStorage.getItem("viewersHS"),10)||0,followersHS=parseInt(localStorage.getItem("followersHS"),10)||0,viewersStreak=parseInt(localStorage.getItem("viewersStreak"),10)||0,followersStreak=parseInt(localStorage.getItem("followersStreak"),10)||0,gameStreak=parseInt(localStorage.getItem("gameStreak"),10)||0,emoteStreak=parseInt(localStorage.getItem("emoteStreak"),10)||0,viewersHigherlowerStreak=parseInt(localStorage.getItem("viewersHigherlowerStreak"),10)||0,followersHigherlowerStreak=parseInt(localStorage.getItem("followersHigherlowerStreak"),10)||0,channelName=localStorage.getItem("channelName")||"",elements.channelName.value=channelName,elements.viewersHS.innerHTML=viewersHS.toLocaleString(),elements.followersHS.innerHTML=followersHS.toLocaleString(),elements.viewersStreak.innerHTML=viewersStreak.toLocaleString(),elements.followersStreak.innerHTML=followersStreak.toLocaleString(),elements.gameStreak.innerHTML=gameStreak.toLocaleString(),elements.emoteStreak.innerHTML=emoteStreak.toLocaleString(),elements.viewersHigherlowerStreak.innerHTML=viewersHigherlowerStreak.toLocaleString(),elements.followersHigherlowerStreak.innerHTML=followersHigherlowerStreak.toLocaleString(),gameSettingsModal=new bootstrap.Modal(elements.gameSettingsModal),totalTab=new bootstrap.Tab(elements.totalTab),roundTab=new bootstrap.Tab(elements.roundTab),elements.streamsVideoType.onchange=function(){this.checked&&(elements.videoTypeDesc.innerHTML="A random live stream will be picked for you each round. Some streams might have preroll ads",elements.clipCollectionDiv.style.display="none")},elements.clipsVideoType.onchange=function(){this.checked&&(elements.videoTypeDesc.innerHTML="A random clip will be picked for you each round. Clips don't have ads",elements.clipCollectionDiv.style.display="")},elements.sliderControls.onchange=function(){this.checked&&(gameSettings.controls="slider",elements.controlsDesc.innerHTML=`You will have to guess the exact ${"followers"==gameSettings.game?"follow":"view"} count - 5 rounds - 5,000 points per round based on how close you are to the correct number`)},elements.choicesControls.onchange=function(){this.checked&&(gameSettings.controls="choices",elements.controlsDesc.innerHTML="You will be given 5 options and you will have to pick 1 of them - Keep playing till you get a wrong answer")},elements.higherlowerControls.onchange=function(){this.checked&&(gameSettings.controls="higherlower",elements.controlsDesc.innerHTML=`You will have to guess if the current stream has a higher or lower ${"followers"==gameSettings.game?"follow":"view"} count than the previous one  - Keep playing till you get a wrong answer`)},elements.guessRange.oninput=function(){let e=parseInt(this.value,10);elements.guessNumber.value=Math.round(Math.exp(Math.log(max)/100*e)),0==e&&(elements.guessNumber.value=0)},elements.guessNumber.oninput=function(){let e=parseInt(this.value,10);elements.guessRange.value=100*Math.log(e)/Math.log(max),0==e&&(elements.guessRange.value=0)},elements.nextRound.onclick=function(){localStorage.setItem("seenChannels",JSON.stringify(seenChannels)),localStorage.setItem("seenClips",JSON.stringify(seenClips)),nextRound()},elements.playAgain.onclick=async function(){elements.playAgain.disabled=!0,elements.playAgain.innerHTML=spinner,await startGame(),nextRound()},elements.reset.onclick=function(){reset()},elements.resetHighScore.onclick=function(){localStorage.setItem("viewersHS",0),localStorage.setItem("followersHS",0),viewersHS=0,followersHS=0,elements.viewersHS.innerHTML=0,elements.followersHS.innerHTML=0,showToast("High scores reset","success",2e3)},elements.resetMaxStreaks.onclick=function(){localStorage.setItem("viewersStreak",0),localStorage.setItem("followersStreak",0),localStorage.setItem("gameStreak",0),localStorage.setItem("emoteStreak",0),localStorage.setItem("viewersHigherlowerStreak",0),localStorage.setItem("followersHigherlowerStreak",0),viewersStreak=0,followersStreak=0,gameStreak=0,emoteStreak=0,viewersHigherlowerStreak=0,followersHigherlowerStreak=0,elements.viewersStreak.innerHTML=0,elements.followersStreak.innerHTML=0,elements.gameStreak.innerHTML=0,elements.emoteStreak.innerHTML=0,elements.viewersHigherlowerStreak.innerHTML=0,elements.followersHigherlowerStreak.innerHTML=0,showToast("High scores reset","success",2e3)},elements.resetSeenChannels.onclick=function(){localStorage.setItem("seenChannels",JSON.stringify([])),seenChannels=[],elements.seenChannels.innerHTML=0,showToast("Seen channels reset","success",2e3)},elements.resetSeenClips.onclick=function(){localStorage.setItem("seenClips",JSON.stringify([])),seenClips=[],elements.seenClips.innerHTML=0,showToast("Seen clips reset","success",2e3)}};