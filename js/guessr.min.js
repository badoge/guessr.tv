const elements={toastContainer:document.getElementById("toastContainer"),reset:document.getElementById("reset"),twitchEmbed:document.getElementById("twitchEmbed"),mainCard:document.getElementById("mainCard"),sliderDiv:document.getElementById("sliderDiv"),guessRangeLabel:document.getElementById("guessRangeLabel"),guessRange:document.getElementById("guessRange"),guessLabel:document.getElementById("guessLabel"),guessNumber:document.getElementById("guessNumber"),multiChoiceDiv:document.getElementById("multiChoiceDiv"),multiChoiceLabel:document.getElementById("multiChoiceLabel"),multiChoice1:document.getElementById("multiChoice1"),multiChoice2:document.getElementById("multiChoice2"),multiChoice3:document.getElementById("multiChoice3"),multiChoice4:document.getElementById("multiChoice4"),multiChoice5:document.getElementById("multiChoice5"),gameNameDiv:document.getElementById("gameNameDiv"),gameInput:document.getElementById("gameInput"),gameList:document.getElementById("gameList"),higherlowerDiv:document.getElementById("higherlowerDiv"),higherlowerLabel:document.getElementById("higherlowerLabel"),higher:document.getElementById("higher"),lower:document.getElementById("lower"),resultsDiv:document.getElementById("resultsDiv"),nextRound:document.getElementById("nextRound"),endButtons:document.getElementById("endButtons"),playAgain:document.getElementById("playAgain"),breakdown:document.getElementById("breakdown"),scoreProgressBarLabel:document.getElementById("scoreProgressBarLabel"),progress:document.getElementById("progress"),progressBar:document.getElementById("progressBar"),gameEndText:document.getElementById("gameEndText"),correction:document.getElementById("correction"),scoreDiv:document.getElementById("scoreDiv"),round:document.getElementById("round"),score:document.getElementById("score"),timerDiv:document.getElementById("timerDiv"),timer:document.getElementById("timer"),infoTime:document.getElementById("infoTime"),streamCover:document.getElementById("streamCover"),clipCover:document.getElementById("clipCover"),skipSexual:document.getElementById("skipSexual"),unloadWarning:document.getElementById("unloadWarning"),viewersHS:document.getElementById("viewersHS"),gameStreak:document.getElementById("gameStreak"),emoteStreak:document.getElementById("emoteStreak"),viewersHigherlowerStreak:document.getElementById("viewersHigherlowerStreak"),resetSeenChannels:document.getElementById("resetSeenChannels"),seenChannels:document.getElementById("seenChannels"),resetSeenClips:document.getElementById("resetSeenClips"),seenClips:document.getElementById("seenClips"),resetGameModal:document.getElementById("resetGameModal"),gameSettingsModal:document.getElementById("gameSettingsModal"),streamsVideoType:document.getElementById("streamsVideoType"),clipsVideoType:document.getElementById("clipsVideoType"),clipCollectionDiv:document.getElementById("clipCollectionDiv"),clipCollection:document.getElementById("clipCollection"),videoTypeDesc:document.getElementById("videoTypeDesc"),controlsTypeDiv:document.getElementById("controlsTypeDiv"),sliderControls:document.getElementById("sliderControls"),higherlowerControls:document.getElementById("higherlowerControls"),controlsDesc:document.getElementById("controlsDesc"),timerValue:document.getElementById("timerValue"),chatSettingsDiv:document.getElementById("chatSettingsDiv"),channelName:document.getElementById("channelName"),disclaimer:document.getElementById("disclaimer"),getSettingsButton:document.getElementById("getSettingsButton"),leaderboard:document.getElementById("leaderboard"),leaderboardTabs:document.getElementById("leaderboardTabs"),totalTab:document.getElementById("totalTab"),roundTab:document.getElementById("roundTab"),leaderboardList:document.getElementById("leaderboardList"),leaderboardListRound:document.getElementById("leaderboardListRound"),chatHint:document.getElementById("chatHint")},{animate:animate,utils:utils}=anime;let channelBadges={subscriber:[],bits:[]},globalBadges={},customBadges=[];const mainMenuInnerHTML=elements.twitchEmbed.innerHTML,powerupIcons={p5050:'<i class="material-icons notranslate" title="50-50">theater_comedy</i>',pSkip:'<i class="material-icons notranslate" title="Round skipped">skip_next</i>'};let channelName,channelId,streamerColor,timer,gameSettingsModal,resetGameModal,client,totalTab,roundTab,mainList=[],gameList=[],emoteList=[],guessList=[],seenChannels=[],seenClips=[],roundResults=[],usedPowerups=[],round=0,score=0,player=null,max=0,previousNumber=null,emoteChoices={a:1,b:2,c:3,d:4,e:5},gameSettings={game:"viewers",video:"streams",collection:"random",controls:"slider",chat:!1},powerups={p5050:0,pSkip:0},skipSexual=!0,unloadWarning=!1,gameRunning=!1,highscores={viewersHS:0,gameStreak:0,emoteStreak:0,viewersHigherlowerStreak:0},roundActive=!1,chatters=new Map,usernameSent=!1;async function getMainList(){let e={headers:{pragma:"no-cache","cache-control":"no-cache"}};try{let t=await fetch(`https://api.okayeg.com/guess?dank=${Date.now()}`,e),n=await t.json();mainList=n.guess.guess,elements.guessRange.value=0,elements.guessNumber.value="",elements.infoTime.innerHTML=`Channel list updated on ${new Date(n.guess.time)}`}catch(e){console.log(e)}}async function getClipSet(){try{let e=await fetch(`https://api.okayeg.com/guess/clips/${gameSettings.collection}?time=${Date.now()}`),t=await e.json();mainList=t.random[0].clips,elements.guessRange.value=0,elements.guessNumber.value="",elements.infoTime.innerHTML=`Clip set generated on ${new Date(t.random[0].time)}`}catch(e){console.log(e)}}async function getEmoteList(){try{let e=await fetch(`https://api.okayeg.com/guess/emotes?time=${Date.now()}`),t=await e.json();emoteList=t.random}catch(e){console.log(e)}}async function loadGameList(){let e=await fetch("/games.json");gameList=await e.json(),elements.gameList.innerHTML="",shuffleArray(gameList);for(let e=0;e<gameList.length;e++)elements.gameList.innerHTML+=`<option value="${gameList[e].name}"></option>`}function toggleControls(e=!1){if(e)return elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",void(elements.higherlowerDiv.style.display="none");switch(gameSettings.controls){case"slider":elements.sliderDiv.style.display="",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none";break;case"choices":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none";break;case"text":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="",elements.higherlowerDiv.style.display="none";break;case"higherlower":elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="";break;default:break}}async function startGame(){guessList=[],chatters=new Map,roundResults=[],score=0,elements.leaderboardList.innerHTML="",elements.leaderboardListRound.innerHTML="",elements.chatHint.style.display="","clips"==gameSettings.video&&await getClipsGuessList(),"gamename"==gameSettings.game&&(gameSettings.controls="text",await loadGameList()),"emote"==gameSettings.game&&(gameSettings.controls="choices",await getEmoteList()),player||(elements.twitchEmbed.innerHTML=""),"slider"==gameSettings.controls?(elements.round.innerHTML="Round <br />1/5",elements.score.innerHTML="Score <br />0",elements.scoreDiv.style.display=""):(elements.round.innerHTML="Score <br />0",elements.score.innerHTML="",elements.scoreDiv.style.display=""),gameSettings.chat&&showLeaderboard(),elements.correction.innerHTML="",elements.gameEndText.innerHTML="",elements.mainCard.style.display="",elements.breakdown.disabled=!1,round=0,previousNumber=null;for(const e in powerups)powerups[e]=1;gameRunning=!0,changeSiteLinkTarget("_blank")}async function getRandomStream(){let e=mainList[Math.floor(Math.random()*mainList.length)];if(seenChannels.some((t=>t===e.username)))return await getRandomStream();if(e.sexual&&skipSexual)return await getRandomStream();try{let t=await fetch(`https://helper.guessr.tv/twitch/streams?user_id=${e.userid}`),n=await t.json();if(n.data[0]){if("emote"==gameSettings.game){let t=0;try{let n=await fetch(`https://helper.guessr.tv/twitch/chat/emotes?broadcaster_id=${e.userid}`),s=await n.json();if(!(s?.data?.length>0))return showToast("Channel has no emotes, getting new channel...","info",3e3),await getRandomStream();{let n=s.data[Math.floor(Math.random()*s.data.length)].id;for(;!await checkEmote(n);){if(++t>3)return showToast("Something went wrong while fetching the channel's emotes :(","danger",3e3),console.log(error),await getRandomStream();n=s.data[Math.floor(Math.random()*s.data.length)].id}e.emote=n}}catch(e){return showToast("Something went wrong while fetching the channel's emotes :(","danger",3e3),console.log(e),await getRandomStream()}}return n.data[0].game_name||"gamename"!=gameSettings.game?(e.viewers=n.data[0].viewer_count,e.game_name=n.data[0].game_name,e.game_name_clean=cleanString(n.data[0].game_name),e.thumbnail=n.data[0].thumbnail_url||"",max=e.viewers+Math.floor(1e4*Math.random()),elements.guessNumber.max=max,e):await getRandomStream()}return mainList=mainList.filter((t=>t.username!=e.username)),await getRandomStream()}catch(e){return showToast("Something went wrong while updating the view count :(","danger",3e3),console.log(e),await getRandomStream()}}async function getClipsGuessList(){await getClipSet();let e=mainList.map((e=>e.id));try{let t=await fetch(`https://helper.guessr.tv/twitch/clips?id=${e.join(",")}`);if(200!=t.status)return void showToast("Something went wrong while updating clip view counts :(","danger",3e3);let n=await t.json();for(let e=0;e<n.data.length;e++){let t=mainList.findIndex((t=>t.id==n.data[e].id));mainList[t].viewers=n.data[e].view_count,mainList[t].thumbnail=n.data[e].thumbnail_url||""}if(guessList=mainList.filter((e=>n.data.some((t=>e.id==t.id)))),guessList.length<5)return showToast("Clip set contains deleted clips, getting new set...","info",2e3),await getClipsGuessList();if(guessList=guessList.filter((e=>!seenClips.includes(e.id))),guessList.length<5)return showToast("Clip set contains already seen clips, getting new set...","info",2e3),await getClipsGuessList();max=Math.max(...guessList.map((e=>e.viewers||0)))+Math.floor(1e4*Math.random()),elements.guessNumber.max=max,"emote"==gameSettings.game&&await getClipsEmotes()}catch(e){showToast("Something went wrong while updating clip view counts :(","danger",3e3),console.log(e)}}async function getClipsEmotes(){let e=0;for(let t=0;t<5;t++){let n=0;try{let s=await fetch(`https://helper.guessr.tv/twitch/chat/emotes?broadcaster_id=${guessList[t].userid}`);if(200!=s.status)return void showToast("Something went wrong while fetching the channel's emotes :(","danger",3e3);let a=await s.json();if(!(a?.data?.length>0))return showToast("Channel has no emotes, getting new clip set...","info",3e3),await getClipsGuessList();{let s=a.data[Math.floor(Math.random()*a.data.length)].id;for(;!await checkEmote(s);){if(++n>3)return showToast("Something went wrong while fetching the channel's emotes :(","danger",3e3),console.log(error),await getClipsGuessList();s=a.data[Math.floor(Math.random()*a.data.length)].id}guessList[t].emote=s,e++}}catch(e){showToast("Something went wrong while fetching the channel's emotes :(","danger",3e3),console.log(e)}}if(e<5)return guessList=[],showToast("Clip set contains deleted clips, getting new set...","info",2e3),await getClipsGuessList()}async function nextRound(){elements.nextRound.disabled=!0,elements.nextRound.innerHTML=spinner,5!=round||"clips"!=gameSettings.video||"choices"!=gameSettings.controls&&"text"!=gameSettings.controls&&"higherlower"!=gameSettings.controls||(await getClipsGuessList(),round=0),"streams"==gameSettings.video&&guessList.push(await getRandomStream()),round++,roundActive=!0,elements.guessRange.value=0,elements.guessNumber.value="",elements.gameInput.value="",usedPowerups=[];const e={};round>1&&(round%3==0&&(e.p5050=1),round%7==0&&(e.pSkip=1));for(const t in powerups)t in e&&(powerups[t]+=e[t]),document.querySelectorAll(`.powerup-${t}-count`).forEach((e=>{e.innerText=powerups[t]})),document.querySelectorAll(`.powerup-${t}-added`).forEach((n=>{n.innerText=t in e?"+"+e[t]:""}));if(toggleControls(),"viewers"==gameSettings.game&&(elements.guessRangeLabel.innerHTML="How many viewers does this stream have?","clips"==gameSettings.video&&(elements.guessRangeLabel.innerHTML="How many views does this clip have?")),"gamename"==gameSettings.game&&!gameList.some((e=>e.name===guessList[round-1].game_name))){elements.gameList.innerHTML="",gameList.push({name:guessList[round-1].game_name}),shuffleArray(gameList);for(let e=0;e<gameList.length;e++)elements.gameList.innerHTML+=`<option value="${gameList[e].name}"></option>`}if("emote"==gameSettings.game&&(elements.multiChoiceDiv.style.display="none",elements.multiChoiceLabel.innerHTML="Which emote belongs to this channel?",await generateEmoteChoices(guessList[round-1].userid)),"higherlower"==gameSettings.controls&&(null==previousNumber?(previousNumber=Math.floor(Math.random()*("viewers"==gameSettings.game?100:500)),elements.higherlowerLabel.innerHTML=`\n      Does this ${"streams"==gameSettings.video?"stream":"clip"} have a higher or lower view count than <span class="previous-number">${previousNumber.toLocaleString()}?</span> \n      <i style="vertical-align: text-top;" class="material-icons notranslate" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="The first round has a random starting number, later rounds will be compared to the previous round">info</i>`,enableTooltips()):elements.higherlowerLabel.innerHTML=`\n      Does this ${"streams"==gameSettings.video?"stream":"clip"} have a higher or lower view count than the previous ${"streams"==gameSettings.video?"stream":"clip"} <span class="previous-number">(${previousNumber.toLocaleString()})?</span>`),"streams"==gameSettings.video?elements.streamCover.style.display="":elements.clipCover.style.display="","slider"==gameSettings.controls?(elements.round.innerHTML=`Round <br />${round}/5`,elements.score.innerHTML=`Score <br />${score.toLocaleString()}`):(elements.round.innerHTML=`Score <br />${score.toLocaleString()}`,elements.score.innerHTML=""),"streams"==gameSettings.video){let e={width:"100%",height:"100%",allowfullscreen:!1,layout:"video",channel:guessList[round-1].username,parent:["guessr.tv"]};player?player.setChannel(guessList[round-1].username):player=new Twitch.Player("twitchEmbed",e),seenChannels.push(guessList[round-1].username)}gameSettings.chat&&guessList[round-1].username==channelName&&(showConfetti(2),sendUsername(" - dank ⚠️ ⚠️ ⚠️")),"clips"==gameSettings.video&&(elements.twitchEmbed.innerHTML=`\n    <iframe \n    src="https://clips.twitch.tv/embed?clip=${guessList[round-1].id}&parent=${window.location.hostname}&autoplay=true" \n    height="100%" \n    width="100%" \n    preload="auto" \n    >\n    </iframe>`,seenClips.push(guessList[round-1].id)),"slider"==gameSettings.controls&&(elements.leaderboardListRound.innerHTML="",totalTab.show()),elements.correction.innerHTML="",elements.nextRound.disabled=!1,elements.nextRound.innerHTML="Next round",elements.nextRound.style.display="none",elements.endButtons.style.display="none",elements.resultsDiv.style.display="none",startTimer()}async function generateEmoteChoices(e){let t=[],n=[];for(let e=0;e<4;e++){const s=emoteList[Math.floor(Math.random()*emoteList.length)],a=[...s.bitstier,...s.follower,...s.subscriptions];if(t.includes(s._id)||a.length<1){e--;continue}let o=a[Math.floor(Math.random()*a.length)].id;await checkEmote(o)?(t.push(s._id),n.push({emote:o,id:s._id})):e--}n.push({emote:guessList[round-1].emote,id:e}),shuffleArray(n);for(let e=0;e<n.length;e++){const t=`multiChoice${e+1}`;elements[t].disabled=!1,elements[t].classList.add("btn-outline-success"),elements[t].classList.remove("btn-outline-secondary"),elements[t].dataset.answer=n[e].id,elements[t].dataset.emote=n[e].emote,elements[t].innerHTML=`\n    ${gameSettings.chat?Object.keys(emoteChoices).find((t=>emoteChoices[t]===e+1)):""} \n    <img src="https://static-cdn.jtvnw.net/emoticons/v2/${n[e].emote}/default/dark/3.0" alt="emote #${e+1}">`}elements.multiChoiceDiv.style.display=""}async function checkEmote(e){try{const t=await fetch(`https://static-cdn.jtvnw.net/emoticons/v2/${e}/default/dark/3.0`);return(await t.blob()).type.startsWith("image/")}catch(e){return!1}}async function guess(e,t=!1,n=!1){let s;switch(roundActive=!1,e){case"slider":s=parseInt(elements.guessNumber.value,10),t&&!s&&(s=-1);break;case 1:case 2:case 3:case 4:case 5:s=parseInt(elements[`multiChoice${e}`].dataset.answer,10);break;case"higher":case"lower":s=e;break;case"game":if(s=cleanString(elements.gameInput.value),!s&&!t)return showToast("Invalid answer","warning",2e3),void(elements.gameInput.value="");if(!gameList.some((e=>cleanString(e.name)===s))&&!t)return showToast("Answer must be from the suggestions list","warning",2e3),void(elements.gameInput.value="");t&&!s&&(s=-1);break;default:s=-1}if((isNaN(s)||null===s)&&"gamename"!=gameSettings.game&&"higherlower"!=gameSettings.controls&&!t)return void showToast("Invalid answer","warning",2e3);stopTimer();let a=calculateScore(s,n);a.task=guessList[round-1],a.powerups=usedPowerups,roundResults.push(a);let{points:o,percent:i,diff:r,color:l}=a;if(score+=o,elements.streamCover.style.display="none",elements.clipCover.style.display="none",toggleControls(!0),elements.nextRound.style.display="",elements.resultsDiv.style.display="","slider"==gameSettings.controls?elements.score.innerHTML=`Score <br />${score.toLocaleString()}`:elements.round.innerHTML=`Score <br />${score.toLocaleString()}`,"viewers"==gameSettings.game&&"slider"==gameSettings.controls&&(animateScore(o,i),showCorrection(guessList[round-1][gameSettings.game],s,r,o,l)),"gamename"==gameSettings.game&&(i=score/highscores.gameStreak*100,animateScore(score,i,highscores.gameStreak),showCorrection(guessList[round-1].game_name,-1==s?s:elements.gameInput.value,null,o,l),score>highscores.gameStreak&&(highscores.gameStreak=score,localStorage.setItem("gameStreak",highscores.gameStreak))),"emote"==gameSettings.game){let t=null===e?null:elements[`multiChoice${e}`].dataset.emote;i=score/highscores.emoteStreak*100,animateScore(score,i,highscores.emoteStreak),showCorrection(guessList[round-1].emote,-1==s?s:t,null,o,null),score>highscores.emoteStreak&&(highscores.emoteStreak=score,localStorage.setItem("emoteStreak",highscores.emoteStreak))}if("viewers"==gameSettings.game&&"higherlower"==gameSettings.controls){let e=highscores.viewersHigherlowerStreak;i=score/e*100,animateScore(score,i,e),showCorrection(guessList[round-1][gameSettings.game],s,null,o,null),previousNumber=guessList[round-1][gameSettings.game],score>e&&(highscores.viewersHigherlowerStreak=score,localStorage.setItem("viewersHigherlowerStreak",score))}if(a.correctionHTML=elements.correction.innerHTML,gameSettings.chat){let e=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),t=chatters.get(e);t?(t.answer={points:o},chatters.set(e,t)):chatters.set(e,{username:e,score:0,round:0,answer:{points:o},color:streamerColor,badges:addBadges("streamer",channelId)}),updateLeaderboard()}"choices"!=gameSettings.controls&&"text"!=gameSettings.controls&&"higherlower"!=gameSettings.controls&&5==round&&"viewers"==gameSettings.game&&(elements.gameEndText.innerHTML=`Final Score: ${score.toLocaleString()}`,score>highscores.viewersHS?(elements.gameEndText.innerHTML+="<br>New High Score!",highscores.viewersHS=score,localStorage.setItem("viewersHS",highscores.viewersHS)):elements.gameEndText.innerHTML+=`<br>High Score: ${highscores.viewersHS.toLocaleString()}`,elements.nextRound.style.display="none",elements.endButtons.style.display="",elements.gameEndText.style.display="",gameRunning=!1,changeSiteLinkTarget("_self"))}function showBreakdown(){const e=[640,360],t=roundResults.map(((t,n)=>{const s=t.task.username.toLowerCase(),a=String(t.task.thumbnail).replace("{width}",e[0]).replace("{height}",e[1]),o=`<a href="https://twitch.tv/${s}" target="_blank">${t.task.display_name||t.task.username}</a>`;let i;i="clips"==gameSettings.video?`\n      <iframe height="100%" width="100%" preload="metadata"\n      src="https://clips.twitch.tv/embed?clip=${t.task.id}&parent=${window.location.hostname}&autoplay=true" \n      ></iframe>`:`<iframe src="https://player.twitch.tv/?channel=${s}&parent=${window.location.hostname}" width="100%" height="100%" allowfullscreen autoplay="false"></iframe>`;let r=t.points.toLocaleString()+" Point";t.points%10==1&&t.points%100!=11||(r+="s"),0===t.points&&(r+=" 💀");const l=-1===t.answer?"❌":t.answer;let m;return m="emote"===gameSettings.game?"<p class='m-0'>"+t.correctionHTML+"</p>":"gamename"===gameSettings.game?`<p class='m-0'>\n      Your guess: <span class="text-${n+1<roundResults.length?"success":"danger"}">${l}</span>\n      <br /><br />\n      Correct answer: <span class="text-info">${t.correct}</span>\n    </p>`:"slider"===gameSettings.controls?`<div class="col-8">\n          <div class="fs-5">\n            <span>${r}</span><br />\n            <div class="progress" role="progressbar" aria-label="score" aria-valuenow="${t.percent}" aria-valuemin="0" aria-valuemax="100">\n              <div class="progress-bar" style="width:${t.percent}%"></div>\n            </div>\n          </div>\n        </div>\n        <div class="col-4">${t.correctionHTML}</div>`:`<div class="col-6">\n        <p>Your guess:</p>\n        <div>\n          <button type="button" class="btn btn-outline-${n+1<roundResults.length?"success":"danger"} multiChoice-btn m-0">\n            ${l}\n          </button>\n        </div>\n      </div>\n      <div class="col-6">\n        <p>Correct answer</p>\n        <div>\n          <button type="button" class="btn btn-outline-info multiChoice-btn m-0">\n            ${t.correct}\n          </button>\n        </div>\n      </div>`,`<div class="row mb-3">\n    <div class="card p-0">\n      <div class="card-body d-flex flex-row p-0">\n        <div class="final-small-embed rounded-start" onclick='this.innerHTML=\`${i}\`'>\n          <img class="h-100 w-auto rounded-start" src="${a}" width="${e[0]}" height="${e[1]}" alt="">\n          <div class="embed-playbutton"><i class="material-icons notranslate mp-icon">play_arrow</i></div>\n        </div>\n        <div class="col">\n          <div class="d-flex flex-row m-2 align-items-center text-start">\n            <h4 class="flex-grow-1 m-0"><b>${1+n}</b> &ndash; ${o}</h4>\n            <div class="d-flex flex-row gap-1" style="cursor:default">\n              ${t.powerups.map((e=>powerupIcons[e])).join(" ")}\n            </div>\n          </div>\n          <hr />\n          <div class="row px-2">\n            ${m}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`}));elements.twitchEmbed.innerHTML=`<div class="card w-100 gameover-card">\n    <div class="card-header fs-3 position-sticky top-0 bg-body-tertiary z-1">Game breakdown</div>\n    <div class="card-body">\n      <div class="container-fluid">\n        ${t.join("\n")}\n      </div>\n    </div>\n  </div>`,elements.scoreDiv.style.display="none",elements.chatHint.style.display="none",elements.breakdown.disabled=!0,player=null}function calculateScore(e,t=!1){const n={};let s,a=0,o=0,i=0;if("emote"==gameSettings.game&&(a=e==guessList[round-1].userid?1:-1,t&&(a=0),n.answer=e,n.correct=guessList[round-1].userid),"viewers"==gameSettings.game&&"slider"==gameSettings.controls){let t=Math.max(...guessList.slice(0,5).map((e=>e.viewers||0))),s=guessList[round-1].viewers/t*4900+100;i=Math.abs(e-guessList[round-1].viewers),a=Math.round(5e3*Math.exp(-i/s)),o=Math.round(a/5e3*100),n.answer=e,n.correct=guessList[round-1].viewers}if("higherlower"==gameSettings.controls&&"viewers"==gameSettings.game){let s=e;guessList[round-1][gameSettings.game]>previousNumber&&(s="higher"),guessList[round-1][gameSettings.game]<previousNumber&&(s="lower"),a=e===s?1:-1,t&&(a=0),n.answer=e,n.correct=s}if("gamename"==gameSettings.game){let s=!1;s=/\d/.test(guessList[round-1].game_name_clean)?guessList[round-1].game_name_clean===e:checkSimilarity(e,guessList[round-1].game_name_clean),a=s?1:-1,t&&(a=0),n.answer=String(elements.gameInput.value),n.correct=guessList[round-1].game_name}if(!t&&-1==e){switch(gameSettings.controls){case"higherlower":case"choices":case"text":a=-1;break;case"slider":a=0;break}o=0,n.answer="slider"==gameSettings.controls?0:"⏱️ timed out"}return a>=4500?s="text-success":a<4500&&a>=2e3?s="text-warning":a<2e3&&(s="text-danger"),n.points=a,n.percent=o,n.diff=i,n.color=s,n}function animateScore(e,t,n=null){elements.progressBar.style.width=0;let s={points:0,percent:0};animate(s,null===n?{points:e,percent:t,modifier:utils.round(0),duration:1e3,ease:"inOutExpo",onUpdate:function(){elements.scoreProgressBarLabel.innerHTML=`${s.points.toLocaleString()} ${1==e?"Point":"Points"}`,elements.progressBar.style.width=`${s.percent}%`}}:{points:e,percent:t,modifier:utils.round(0),duration:1e3,ease:"inOutExpo",onUpdate:function(){elements.scoreProgressBarLabel.innerHTML=e>n?`You beat your high score! Your new highscore is ${s.points.toLocaleString()}`:`${n-s.points+1} more ${n-s.points+1==1?"round":"rounds"} till you beat your highscore`,elements.progressBar.style.width=`${e>n?100:s.percent}%`}}),0==e&&(elements.scoreProgressBarLabel.innerHTML+=" 💀"),elements.progress.ariaValueNow=t}function showCorrection(e,t,n,s,a){let o=t-e>0?'<i class="material-icons notranslate">arrow_upward</i>':'<i class="material-icons notranslate">arrow_downward</i>';"slider"==gameSettings.controls&&"viewers"==gameSettings.game&&(elements.correction.innerHTML=`\n    The ${"streams"==gameSettings.video?"stream":"clip"} has ${viewersSVG}<strong>${e.toLocaleString()}</strong>\n    ${1==e?""+("streams"==gameSettings.video?"viewer":"view"):""+("streams"==gameSettings.video?"viewers":"views")}<br>\n    ${0==n?"You nailed the view count perfectly ✌":""+(-1==t?"You did not submit an answer":`Your guess was off by ${o} <span class="${a}">${n.toLocaleString()}</span> ${1==n?""+("streams"==gameSettings.video?"viewer":"view"):""+("streams"==gameSettings.video?"viewers":"views")}`)}`),"emote"==gameSettings.game&&(elements.correction.innerHTML=`\n    The streamer's emote is <img style="height: 56px;" src="https://static-cdn.jtvnw.net/emoticons/v2/${e}/default/dark/3.0" alt="emote"><br>\n    ${s>-1?-1==t?"You skipped this round 🤷":"You guessed the emote correctly ✌":-1==t?"You did not select an emote":`You guessed <img style="height: 56px;" src="https://static-cdn.jtvnw.net/emoticons/v2/${t}/default/dark/3.0" alt="emote">`}`),"gamename"==gameSettings.game&&(elements.correction.innerHTML=`\n    The streamer is playing <strong>${e}</strong><br>\n    ${1==s?"You guessed the game correctly ✌":""+(-1==t?"You did not select an answer":`You guessed <span class="${a}">${t}</span>`)}`),"higherlower"==gameSettings.controls&&(elements.correction.innerHTML=`\n    The ${"streams"==gameSettings.video?"channel":"clips"} has ${viewersSVG}<strong>${guessList[round-1][gameSettings.game].toLocaleString()}</strong>\n    ${1==e?"viewer":"viewers"}${e==previousNumber?" (same as previous channel!)":""}<br>\n    ${s>-1?-1==t?"<br>You skipped this round 🤷":`This ${"streams"==gameSettings.video?"stream":"clip"} has a <i>${t}</i> view count than the previous ${"streams"==gameSettings.video?"stream":"clip"}`:-1==t?"You did not select an answer":`The previous ${"streams"==gameSettings.video?"channel":"clip"} had ${previousNumber.toLocaleString()} ${1==previousNumber?""+("streams"==gameSettings.video?"viewer":"view"):""+("streams"==gameSettings.video?"viewers":"views")}`}`)}function reset(e=!1){e&&gameRunning?resetGameModal.show():(stopTimer(),guessList=[],elements.round.innerHTML="Round <br />1/5",elements.score.innerHTML="Score <br />0",elements.scoreDiv.style.display="none",elements.sliderDiv.style.display="none",elements.multiChoiceDiv.style.display="none",elements.gameNameDiv.style.display="none",elements.higherlowerDiv.style.display="none",elements.resultsDiv.style.display="none",elements.mainCard.style.display="none",elements.streamCover.style.display="none",elements.clipCover.style.display="none",elements.leaderboard.style.display="none",elements.getSettingsButton.innerHTML="Start",elements.getSettingsButton.disabled=!1,elements.guessLabel.innerHTML="View count",elements.leaderboardList.innerHTML="",elements.gameEndText.innerHTML="",elements.chatHint.style.display="",round=0,score=0,player=null,roundActive=!1,gameRunning=!1,changeSiteLinkTarget("_self"),client&&(client.disconnect(),client=null),elements.twitchEmbed.innerHTML=mainMenuInnerHTML)}async function showSettings(e){switch(gameSettings.game=e,elements.controlsTypeDiv.style.display="viewers"==e?"":"none","higherlower"==gameSettings.controls&&(elements.controlsDesc.innerHTML="You will have to guess if the current stream has a higher or lower view count than the previous one<br>Endless mode, gain or lose a point for each guess you make"),"slider"==gameSettings.controls&&(elements.controlsDesc.innerHTML="You will have to guess the exact view count of each stream<br />5 rounds - 5,000 points per round based on how close you are to the correct view count"),elements.disclaimer.style.display="",e){case"viewers":elements.disclaimer.innerHTML="The answer will not always be the same as the view count seen on the stream because the API does not update as fast";break;case"gamename":elements.disclaimer.innerHTML="Some streamers could forget to update their category or set it incorrectly, expect to be Jebaited :)";break;default:elements.disclaimer.style.display="none"}gameSettingsModal.show()}async function getSettings(){if(elements.getSettingsButton.innerHTML=spinner,elements.getSettingsButton.disabled=!0,gameSettings.video=document.querySelector('input[name="videoTypeSelect"]:checked').value||"streams",gameSettings.collection=elements.clipCollection.value||"random",gameSettings.controls=document.querySelector('input[name="controlsSelect"]:checked').value||"slider","gamename"==gameSettings.game&&"hottub"==gameSettings.collection&&"clips"==gameSettings.video)return showToast("Hmmm today I'll pick game guessr mode then pick a clip collection that has 1 category only 🤙","info",5e3),void reset();if("emote"==gameSettings.game&&"forsen"==gameSettings.collection&&"clips"==gameSettings.video)return showToast("Hmmm today I'll pick emote guessr mode then pick a clip collection that has 1 channel only 🤙","info",5e3),void reset();switch(gameSettings.game){case"gamename":elements.chatHint.innerHTML='<h4>Type <kbd class="notranslate">!guess [game name]</kbd> in chat to guess</h4>';break;case"emote":elements.chatHint.innerHTML="<h4>Type an emote's letter (a/b/c/d/e) in chat to guess</h4>";break;default:elements.chatHint.innerHTML="<h4>Type a number in chat to guess</h4>";break}if("higherlower"==gameSettings.controls&&"viewers"==gameSettings.game&&(elements.chatHint.innerHTML='<h4>Type <kbd class="notranslate">higher</kbd> or <kbd class="notranslate">lower</kbd> in chat to guess</h4>'),channelName=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),channelName.includes("://")||channelName.includes("."))return showToast("Invalid username. Input your username only not the link","warning",3e3),void reset();channelName?(localStorage.setItem("channelName",channelName),gameSettings.chat=!0,connectChat(),channelBadges=await getChannelBadges(channelName),globalBadges=await getGlobalBadges(),customBadges=await getCustomBadges(),channelId||(channelId=await getChannelId()),streamerColor||(streamerColor=await getStreamerColor())):(localStorage.setItem("channelName",""),gameSettings.chat=!1),"streams"==gameSettings.video&&await getMainList(),await startGame(),nextRound(),gameSettingsModal.hide()}async function connectChat(){let e={connection:{secure:!0,reconnect:!0},channels:[channelName]};client=new tmi.client(e),client.on("message",(async(e,t,n,s)=>{if(!gameSettings.chat||!roundActive||t.username==channelName)return;let a={points:"",percent:"",diff:"",color:""},o=n.split(" ").filter(Boolean);if("higherlower"!==gameSettings.controls&&"viewers"==gameSettings.game){let e=parseAnswer(o[0]);if(null==e||""===e||e<0)return;a=calculateScore(e)}if("higherlower"==gameSettings.controls&&"viewers"==gameSettings.game){if("higher"!==o[0]?.toLowerCase()&&"lower"!==o[0]?.toLowerCase())return;a=calculateScore(o[0].toLowerCase())}if("gamename"==gameSettings.game){if("!guess"!==o[0]?.toLowerCase())return;a=calculateScore(cleanString(o.slice(1).join("")))}if("emote"==gameSettings.game){if(!emoteChoices.hasOwnProperty(o[0]?.toLowerCase()))return;a=calculateScore(parseInt(elements[`multiChoice${emoteChoices[o[0].toLowerCase()]}`].dataset.answer,10))}let i=chatters.get(t.username);if(i)"slider"!=gameSettings.controls||i.answer||elements.leaderboardListRound.insertAdjacentHTML(""+(1==round?"afterbegin":"beforeend"),`<li class="list-group-item"><span style="color:${t.color||"#FFFFFF"};">${i.badges} ${t.username}:</span> 🙈</li>`),i.answer=a,chatters.set(t.username,i),document.getElementById(`${t.username}_dot`).style.visibility="visible";else{let e=addBadges(t.badges,t["user-id"]);chatters.set(t.username,{username:t.username,score:0,round:0,answer:a,color:t.color,badges:e}),elements.leaderboardList.insertAdjacentHTML(""+(1==round?"afterbegin":"beforeend"),`<li class="list-group-item"><span id="${t.username}_dot">🔵</span><span style="color:${t.color||"#FFFFFF"};">${e} ${t.username}:</span> 🙈</li>`),"slider"==gameSettings.controls&&elements.leaderboardListRound.insertAdjacentHTML(""+(1==round?"afterbegin":"beforeend"),`<li class="list-group-item"><span style="color:${t.color||"#FFFFFF"};">${e} ${t.username}:</span> 🙈</li>`)}})),client.on("connected",((e,t)=>{!usernameSent&&channelName&&sendUsername(),showToast(`Connected to ${channelName}`,"success",2e3)})),client.on("disconnected",(e=>{showToast(`Disconnected: ${e}`,"danger",2e3)})),client.on("notice",((e,t,n)=>{showToast(`Disconnected: ${n}`,"danger",2e3)})),client.connect().catch(console.error)}function parseAnswer(e){try{return(e=e.toLowerCase().replace(/,/g,"")).endsWith("m")?(e=1e6*parseFloat(e.slice(0,-1)),isInt(e)?Math.round(e):null):e.endsWith("k")?(e=1e3*parseFloat(e.slice(0,-1)),isInt(e)?Math.round(e):null):isInt(parseInt(e,10))?parseInt(e,10):null}catch(e){return null}}function startTimer(){let e=60*parseFloat(elements.timerValue.value);e&&(timer=new easytimer.Timer,timer.addEventListener("secondTenthsUpdated",(function(e){document.querySelector("#timer").innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"])})),timer.addEventListener("targetAchieved",(function(e){let t=null;switch(gameSettings.controls){case"slider":t="slider";break;case"text":t="game";break;default:break}guess(t,!0),elements.timerDiv.style.display="none",timer.reset(),timer.stop()})),document.querySelector("#timer").innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"]),elements.timerDiv.style.display="",timer.start({countdown:!0,precision:"secondTenths",startValues:{seconds:e}}))}function stopTimer(){timer&&timer.isRunning()&&(timer.reset(),timer.stop(),elements.timerDiv.style.display="none")}function showLeaderboard(){elements.leaderboard.style.display="","slider"==gameSettings.controls?elements.leaderboardTabs.style.display="":(elements.leaderboardTabs.style.display="none",totalTab.show())}function updateLeaderboard(){for(const[e,t]of chatters.entries())t?.answer&&(t.score+=t?.answer.points,t.round=t?.answer.points,chatters.set(e,t));const e=new Map([...chatters.entries()].sort(((e,t)=>t[1].score-e[1].score)));let t=elements.channelName.value.replace(/\s+/g,"").toLowerCase(),n="";for(const[s,a]of e.entries())n+=`\n    <li class="list-group-item ${t==a.username?"bg-primary":""}">\n      <span id="${a.username}_dot" style="visibility: hidden">🔵</span>\n      <span style="color:${a.color||"#FFFFFF"};">${a.badges} ${a.username}:</span> ${a.score.toLocaleString()}\n    </li>`;if(elements.leaderboardList.innerHTML=n,"slider"==gameSettings.controls){const e=new Map([...chatters.entries()].sort(((e,t)=>t[1].round-e[1].round)));let n="";for(const[s,a]of e.entries())a?.answer&&(n+=`\n      <li class="list-group-item ${t==a.username?"bg-primary":""}">\n        <span style="color:${a.color||"#FFFFFF"};">${a.badges} ${a.username}:</span> ${a.round.toLocaleString()}\n      </li>`);elements.leaderboardListRound.innerHTML=n}for(const[e,t]of chatters.entries())t.answer=null,chatters.set(e,t)}async function playAgain(){const e=elements.playAgain.innerHTML;elements.playAgain.disabled=!0,elements.playAgain.innerHTML=spinner,await startGame(),nextRound(),elements.playAgain.innerHTML=e,elements.playAgain.disabled=!1}function resetHighScore(e){localStorage.setItem(e,0),highscores[e]=0,elements[e].innerHTML=0}function usePowerup(e){if(!(e in powerups))throw new Error("Unknown powerup type requested: "+e);if(usedPowerups.indexOf(e)>=0)console.warn(`You have already used powerup [${e}] on this round!`);else if(powerups[e]<=0)console.warn(`Not enough points to use [${e}] powerup!`);else{switch(e){case"pSkip":if("higherlower"!==gameSettings.controls&&"choices"!==gameSettings.controls)throw new Error(`Powerup [${e}] not allowed for game mode [${gameSettings.controls}]`);guess(null,!1,!0);break;case"p5050":if("choices"!==gameSettings.controls)throw new Error(`Powerup [${e}] not allowed for game mode [${gameSettings.controls}]`);{const e="emote"===gameSettings.game?Number(guessList[round-1].userid):guessList[round-1][gameSettings.game],t=Array.from(document.querySelectorAll("#multiChoiceDiv .multiChoice-btn")),n=t.map((e=>parseInt(e.dataset.answer,10))),s=shuffleArray(n.map(((e,t)=>t))),a=n.indexOf(e);let o=-1;for(;s.length>0;){const e=s.pop();if(e!==a){o=e;break}}for(let e=0;e<t.length;e++)e!==o&&e!==a&&(t[e].disabled=!0,t[e].classList.remove("btn-outline-success"),t[e].classList.add("btn-outline-secondary"))}break}usedPowerups.push(e),powerups[e]-=1,document.querySelectorAll(`.powerup-${e}-count`).forEach((t=>{t.innerText=powerups[e]}))}}window.onload=async function(){localforage.config({driver:localforage.INDEXEDDB,name:"guessr.tv",version:1,storeName:"guessr",description:"guessr"}),seenChannels=JSON.parse(await localforage.getItem("seenChannels"))||[],elements.seenChannels.innerHTML=seenChannels.length.toLocaleString(),seenClips=JSON.parse(await localforage.getItem("seenClips"))||[],elements.seenClips.innerHTML=seenClips.length.toLocaleString(),skipSexual="true"===(localStorage.getItem("skipSexual")||"true"),elements.skipSexual.checked=skipSexual,unloadWarning="true"===(localStorage.getItem("unloadWarning")||"false"),elements.unloadWarning.checked=unloadWarning,highscores.viewersHS=parseInt(localStorage.getItem("viewersHS"),10)||0,highscores.gameStreak=parseInt(localStorage.getItem("gameStreak"),10)||0,highscores.emoteStreak=parseInt(localStorage.getItem("emoteStreak"),10)||0,highscores.viewersHigherlowerStreak=parseInt(localStorage.getItem("viewersHigherlowerStreak"),10)||0,channelName=localStorage.getItem("channelName")||"",elements.channelName.value=channelName,elements.viewersHS.innerHTML=highscores.viewersHS.toLocaleString(),elements.gameStreak.innerHTML=highscores.gameStreak.toLocaleString(),elements.emoteStreak.innerHTML=highscores.emoteStreak.toLocaleString(),elements.viewersHigherlowerStreak.innerHTML=highscores.viewersHigherlowerStreak.toLocaleString(),gameSettingsModal=new bootstrap.Modal(elements.gameSettingsModal),resetGameModal=new bootstrap.Modal(elements.resetGameModal),totalTab=new bootstrap.Tab(elements.totalTab),roundTab=new bootstrap.Tab(elements.roundTab),elements.skipSexual.onchange=function(){skipSexual=this.checked,localStorage.setItem("skipSexual",skipSexual)},elements.unloadWarning.onchange=function(){unloadWarning=this.checked,localStorage.setItem("unloadWarning",unloadWarning)},elements.streamsVideoType.onchange=function(){this.checked&&(elements.videoTypeDesc.innerHTML="A random live stream will be picked for you each round. Some streams might have preroll ads",elements.clipCollectionDiv.style.display="none")},elements.clipsVideoType.onchange=function(){this.checked&&(elements.videoTypeDesc.innerHTML="A random clip will be picked for you each round. Clips don't have ads",elements.clipCollectionDiv.style.display="")},elements.sliderControls.onchange=function(){this.checked&&(gameSettings.controls="slider",elements.controlsDesc.innerHTML="You will have to guess the exact view count of each stream<br />5 rounds - 5,000 points per round based on how close you are to the correct view count")},elements.higherlowerControls.onchange=function(){this.checked&&(gameSettings.controls="higherlower",elements.controlsDesc.innerHTML="You will have to guess if the current stream has a higher or lower view count than the previous one<br>Endless mode, gain or lose a point for each guess you make")},elements.guessRange.oninput=function(){let e=parseInt(this.value,10);elements.guessNumber.value=Math.round(Math.exp(Math.log(max)/100*e)),0==e&&(elements.guessNumber.value=0)},elements.guessNumber.oninput=function(){let e=parseInt(this.value,10);elements.guessRange.value=100*Math.log(e)/Math.log(max),0==e&&(elements.guessRange.value=0)},elements.nextRound.onclick=function(){localforage.setItem("seenChannels",JSON.stringify(seenChannels)),localforage.setItem("seenClips",JSON.stringify(seenClips)),elements.seenChannels.innerHTML=seenChannels.length.toLocaleString(),elements.seenClips.innerHTML=seenClips.length.toLocaleString(),nextRound()},elements.resetSeenChannels.onclick=function(){localforage.setItem("seenChannels",JSON.stringify([])),seenChannels=[],elements.seenChannels.innerHTML=0,showToast("Seen channels reset","success",2e3)},elements.resetSeenClips.onclick=function(){localforage.setItem("seenClips",JSON.stringify([])),seenClips=[],elements.seenClips.innerHTML=0,showToast("Seen clips reset","success",2e3)}},window.onbeforeunload=function(){return unloadWarning&&gameRunning?"Unload warning enabled. You can turn it off in the settings.":null};